plugins {
    id 'java'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '2.0.0'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.2.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
    withJavadocJar()
}

group 'io.github.nathancheshire'
version '2.0.5'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.7.0'
    mockitoVersion = '3.9.0'
    guavaVersion = '32.1.3-jre'
    gsonVersion = '2.8.8'
    powerMockVersion = '2.0.9'
}

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"

    testImplementation "org.powermock:powermock-module-junit4:${powerMockVersion}"
    testImplementation "org.powermock:powermock-api-mockito2:${powerMockVersion}"

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = false
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'GravatarJavaClient'
                description = 'A Java/JVM wrapper for the Gravatar Avatar and Profile APIs'
                url = 'https://github.com/NathanCheshire/GravatarJavaClient'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }

                developers {
                    developer {
                        id = 'nathancheshire'
                        name = 'Nathan Cheshire'
                        email = 'nathan.vincent.2.718@gmail.com'
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/nathancheshire/GravatarJavaClient.git'
                    developerConnection = 'scm:git:ssh://git@github.com:nathancheshire/GravatarJavaClient.git'
                    url = 'https://github.com/nathancheshire/GravatarJavaClient'
                }
            }
        }
    }
}

signing {
    def signingKey = System.getenv('GPG_PRIVATE_KEY')
    def signingPassword = System.getenv('GPG_PASSPHRASE')

    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username.set(System.getenv("CENTRAL_USERNAME"))
            password.set(System.getenv("CENTRAL_PASSWORD"))
        }
    }
}
